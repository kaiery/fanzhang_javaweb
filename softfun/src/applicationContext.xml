<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 1、添加mvc和context命名空间 -->
    <!-- 3、配置Spring MVC控制器注解驱动的编程模型 -->
    <mvc:annotation-driven/>
    <!-- 2、添加组建扫描 -->
    <context:component-scan base-package="com.kaiery.actions"/>
    <!--静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- 4、激活各种注释被检测到在bean类 -->
    <context:annotation-config/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
        <property name="defaultErrorView" value="error"/>
        <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
        <property name="exceptionAttribute" value="exception"/>
        <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.sql.SQLException">error</prop>
                <prop key="java.io.IOException">error</prop>
                <prop key="java.lang.RuntimeException">error</prop>
                <prop key="java.lang.NullPointerException">error</prop>
                <!-- 这里还可以继续扩展对不同异常类型的处理 -->
            </props>
        </property>
    </bean>




    <!--==================== 定义数据源Bean，使用数据源实现======================= -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/orcl"/>
    </bean>


    <!--事务管理-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txadvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" timeout="20"
                       rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" timeout="20"
                       rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" timeout="20"
                       rollback-for="Exception" isolation="SERIALIZABLE"/>
            <tx:method name="query*" timeout="60" read-only="true"/>
            <tx:method name="select*" timeout="60" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <!--切面-->
    <aop:config>
        <aop:pointcut id="ManagerInter" expression="execution(* com.kaiery.manager.ManagerInter.*(..))"/>
        <aop:advisor pointcut-ref="ManagerInter" advice-ref="txadvice"/>
    </aop:config>
    <bean id="managerBean" class="com.kaiery.manager.ManagerImpl">
        <property name="ds" ref="dataSource"/>
    </bean>


</beans>